{"version":3,"sources":["utils/templateLiteralTags.ts","utils/constants.ts","components/Logo/Logo.tsx","components/Typography/Typography.tsx","components/IconButton/IconButton.tsx","components/OptionsList/OptionsList.tsx","redux/sessions/sessions.types.ts","components/StopWatch/StopWatch.tsx","components/HorizontalControl/HorizontalControl.tsx","components/TextList/TextList.tsx","components/TextInput/TextInput.tsx","redux/sessions/sessions.actions.ts","redux/exercises/exercises.types.ts","redux/exercises/exercises.actions.ts","redux/profile/profile.types.ts","consumers/SessionRecorder/SessionRecorder.tsx","components/Platform/Platform.tsx","components/ContentCard/ContentCard.tsx","components/ContentCard/SessionsPerWeekCard/SessionsPerWeekCard.tsx","consumers/SessionTracker/SessionTracker.tsx","components/Toolbar/Toolbar.tsx","redux/profile/profile.actions.ts","consumers/App/App.tsx","serviceWorker.ts","redux/rootReducer.ts","redux/sessions/sessions.reducer.ts","redux/exercises/exercises.reducer.ts","redux/profile/profile.reducer.ts","redux/store.ts","index.tsx"],"names":["ClassSet","strs","_len","arguments","length","conditionals","Array","_key","classRoot","trim","reduce","acc","cur","index","conditional","split","concat","err","console","warn","defaultFetchHeaders","Content-Type","AppColors","React","memo","_ref","_ref$size","size","handleClick","LogoSVG","react_default","a","createElement","width","height","viewBox","fill","xmlns","cx","cy","r","x","y","transform","rx","className","_templateObject","undefined","onClick","e","stopPropagation","_ref$dim","dim","_ref$small","small","children","Typography_templateObject","icon","_ref$outline","outline","_ref$margin","margin","_ref$stopPropagation","iconSVG","IconButton_templateObject","SessionsActionTypes","options","getClickHandler","option","map","key","value","OptionsList_templateObject","selected","highlighted","components_Typography_Typography","StopWatch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","refreshIntervalId","clearTimeoutIds","state","update","bind","assertThisInitialized","start","stop","getMinutes","getSeconds","startOnMount","clearInterval","forEach","clearTimeout","setState","elapsed","startTime","Date","now","setInterval","_this2","endTime","clearOnStop","push","setTimeout","clearTimout","Math","round","toString","padStart","Component","Control","IconButton_IconButton","_ref2","end","HorizontalControl_Control","TextList","_ref$limit","limit","renderPrefix","texts","slice","child","onChange","autoFocus","type","target","ExercisesActionTypes","setSessions","sessions","SET_SESSIONS","payload","ProfileActionTypes","addExercises","exercises","ADD_EXERCISES","setExercises","SET_EXERCISES","SessionRecorder","setsStopWatchRef","createRef","reps","weight","sessionMuscleGroupOptions","newExerciseMuscleGroupOptions","inSet","weightUnit","repsUnit","setSummaries","newExercise","handleBackgroundClick","handleOptionsListItemClick","increaseReps","decreaseReps","increaseWeight","decreaseWeight","nextExercise","completeSession","updateNewExercise","cancelNewExercise","addNewExercise","refreshExercises","refreshSessions","location","pathname","navigateTo","muscleGroups","filter","mgo","startSession","exerciseOptions","node","current","endSet","toConsumableArray","exercise","startSet","_id","extra","_this3","_this4","_this5","_this6","_this7","endSession","addExercise","name","primaryMuscleGroups","secondaryMuscleGroups","_this8","react_router","path","render","components_TextInput_TextInput","components_OptionsList_OptionsList","components_StopWatch_StopWatch","ref","components_HorizontalControl_HorizontalControl","components_TextList_TextList","renderSetPrefix","components_Logo_Logo","connect","router","currentSession","returnVal","mg","includes","includesMuscleGroup","dispatch","route","START_SESSION","asyncToGenerator","regenerator_default","mark","_callee2","getState","wrap","_context2","prev","next","END_SESSION","fetch","method","headers","body","JSON","stringify","session","sent","ok","abrupt","log","_x2","_x3","apply","START_SET","END_SET","_callee","resp","_context","json","_x","components_Platform_Platform","ranges","weeks","weekEndingDay","paddingWeeks","friday","setDate","getDate","getDay","i","nextThursday","label","toDateString","getRanges","data","s","timestamp","marker","opacity","color","components_ContentCard_ContentCard","react_plotly_default","layout","t","b","l","pad","autosize","xaxis","tickangle","tickfont","yaxis","tickcolor","config","displayModeBar","SessionTracker","search","_cur$split","_cur$split2","slicedToArray","objectSpread","defineProperty","getPanelIndex","ContentCard_SessionsPerWeekCard_SessionsPerWeekCard","getSpotlight","setProfile","profile","SET_PROFILE","App","refreshProfile","exact","components_Toolbar_Toolbar","consumers_SessionRecorder_SessionRecorder","isLoggedIn","href","consumers_SessionTracker_SessionTracker","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","history","sessionsReducer","action","sets","duration","valueOf","currentSet","exercisesReducer","profileReducer","createBrowserHistory","store","createStore","combineReducers","connectRouter","compose","applyMiddleware","routerMiddleware","thunk","ReactDOM","es","esm","consumers_App_App","document","getElementById","URL","process","origin","addEventListener","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8c56c9c4.chunk.js","sourcesContent":["export const ClassSet = (strs: TemplateStringsArray, ...conditionals: Array<boolean>) => {\n  const classRoot = strs[strs.length - 1].trim();\n  return strs.reduce((acc: string, cur: string, index: number) => {\n    try {\n      const conditional = cur.split(':', 1)[0].trim();\n      if (conditionals[index]) return `${acc} ${classRoot}-${conditional}`;\n    } catch (err) {\n      console.warn(err);\n    }\n    return acc;\n  }, classRoot);\n}\n","export const defaultFetchHeaders = {\n  'Content-Type': 'application/json',\n};\n\nexport const AppColors = {\n  textColorDim: '#959595',\n};\n","import React, { MouseEvent } from 'react';\nimport './Logo.scss';\nimport { LogoProps } from './Logo.types';\n\nimport { ClassSet } from '../../utils';\n\nconst Logo = ({ size = 'regular', handleClick }: LogoProps) => {\n  const onClick = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    if (handleClick) handleClick(e);\n  };\n  let LogoSVG = null;\n  switch(size) {\n    case 'small':\n      LogoSVG = (\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"white\"/>\n          <rect x=\"9.68188\" y=\"15.7145\" width=\"12\" height=\"4\" transform=\"rotate(-15.8474 9.68188 15.7145)\" fill=\"#313131\"/>\n          <rect x=\"20.6145\" y=\"8.45306\" width=\"4\" height=\"12\" rx=\"1\" transform=\"rotate(-15.8473 20.6145 8.45306)\" fill=\"#313131\"/>\n          <rect x=\"4.26062\" y=\"13.0953\" width=\"4\" height=\"12\" rx=\"1\" transform=\"rotate(-15.8474 4.26062 13.0953)\" fill=\"#313131\"/>\n          <rect x=\"2.53833\" y=\"16.183\" width=\"2\" height=\"6.5\" rx=\"1\" transform=\"rotate(-15.8474 2.53833 16.183)\" fill=\"#313131\"/>\n          <rect x=\"25.6262\" y=\"9.62921\" width=\"2\" height=\"6.5\" rx=\"1\" transform=\"rotate(-15.8474 25.6262 9.62921)\" fill=\"#313131\"/>\n        </svg>\n      );\n      break;\n    default:\n      LogoSVG = (\n        <svg width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"32\" cy=\"32\" r=\"32\" fill=\"white\"/>\n          <rect x=\"19.3638\" y=\"31.4289\" width=\"24\" height=\"8\" transform=\"rotate(-15.8474 19.3638 31.4289)\" fill=\"#313131\"/>\n          <rect x=\"41.229\" y=\"16.9061\" width=\"8\" height=\"24\" rx=\"1\" transform=\"rotate(-15.8474 41.229 16.9061)\" fill=\"#313131\"/>\n          <rect x=\"8.52125\" y=\"26.1907\" width=\"8\" height=\"24\" rx=\"1\" transform=\"rotate(-15.8474 8.52125 26.1907)\" fill=\"#313131\"/>\n          <rect x=\"5.07666\" y=\"32.366\" width=\"4\" height=\"13\" rx=\"1\" transform=\"rotate(-15.8474 5.07666 32.366)\" fill=\"#313131\"/>\n          <rect x=\"51.2523\" y=\"19.2584\" width=\"4\" height=\"13\" rx=\"1\" transform=\"rotate(-15.8474 51.2523 19.2584)\" fill=\"#313131\"/>\n        </svg>\n      );\n      break;\n  }\n  return (\n    <div className={ClassSet`link: ${handleClick !== undefined} Logo`} onClick={onClick}>\n      { LogoSVG }\n    </div>\n  );\n};\n\nexport default React.memo(Logo);\n","import React, { FunctionComponent } from 'react';\nimport './Typography.scss';\nimport { TypographyProps } from './Typography.types';\n\nimport { ClassSet } from './../../utils';\n\nconst Typography: FunctionComponent<TypographyProps> = ({ dim = false, small = false, children }) => {\n  return (\n    <div className={ClassSet`\n      dim: ${dim}\n      small: ${small}\n      Typography`\n    }>\n      { children }\n    </div>\n  );\n};\n\nexport default React.memo(Typography);\n","import React, { MouseEvent } from 'react';\nimport './IconButton.scss';\nimport { IconButtonProps } from './IconButton.types';\n\nimport { ClassSet } from '../../utils';\n\nconst Button = ({ icon, outline = 'none', margin = true, stopPropagation = false, handleClick }: IconButtonProps) => {\n  const onClick = (e: MouseEvent<HTMLDivElement>) => {\n    if (outline !== 'none' || stopPropagation) e.stopPropagation();\n    if (handleClick) handleClick(e);\n  }; \n  let iconSVG = null;\n  switch(icon) {\n    case 'add':\n      iconSVG = (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"23.25\" y=\"12\" width=\"1.5\" height=\"24\" fill=\"#959595\"/>\n          <rect x=\"12\" y=\"23.25\" width=\"24\" height=\"1.5\" fill=\"#959595\"/>\n        </svg>\n      );\n      break;\n    case 'done':\n      iconSVG = (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"38.1003\" y=\"16.3129\" width=\"25.4962\" height=\"1.5\" transform=\"rotate(132.626 38.1003 16.3129)\" fill=\"#959595\"/>\n          <rect x=\"11.5159\" y=\"24.7777\" width=\"13.5929\" height=\"1.5\" transform=\"rotate(42.6257 11.5159 24.7777)\" fill=\"#959595\"/>\n        </svg>\n      );\n      break;\n    case 'minus':\n      iconSVG = (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"12\" y=\"23.25\" width=\"24\" height=\"1.5\" fill=\"#959595\"/>\n        </svg>\n      );\n      break;\n    case 'next':\n      iconSVG = (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"28.0607\" y=\"11.25\" width=\"18\" height=\"1.5\" transform=\"rotate(45 28.0607 11.25)\" fill=\"#959595\"/>\n          <rect x=\"27\" y=\"35.9779\" width=\"18\" height=\"1.5\" transform=\"rotate(-45 27 35.9779)\" fill=\"#959595\"/>\n          <rect x=\"7.5\" y=\"23.25\" width=\"31.5\" height=\"1.5\" fill=\"#959595\"/>\n        </svg>\n      );\n      break;\n    case 'start':\n      iconSVG = (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"20.5607\" y=\"11.25\" width=\"18\" height=\"1.5\" transform=\"rotate(45 20.5607 11.25)\" fill=\"#959595\"/>\n          <rect x=\"19.5\" y=\"35.9779\" width=\"18\" height=\"1.5\" transform=\"rotate(-45 19.5 35.9779)\" fill=\"#959595\"/>\n        </svg>\n      );\n      break;\n    case 'cancel':\n      iconSVG = (\n        <svg width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect x=\"31.955\" y=\"14.9844\" width=\"1.5\" height=\"24\" transform=\"rotate(45 31.955 14.9844)\" fill=\"#959595\"/>\n          <rect x=\"16.045\" y=\"14.9844\" width=\"24\" height=\"1.5\" transform=\"rotate(45 16.045 14.9844)\" fill=\"#959595\"/>\n        </svg>\n      );\n      break;\n  }\n  return (\n    <div\n      className={ClassSet`\n        dashed: ${outline === 'dashed'}\n        margin: ${margin}\n        IconButton\n      `}\n      onClick={onClick}\n    >\n      { iconSVG }\n    </div>\n  );\n};\n\nexport default React.memo(Button);\n","import React from 'react';\nimport { MouseEvent } from 'react';\nimport './OptionsList.scss';\nimport { OptionsListProps, OptionsListOption } from './OptionsList.types';\n\nimport Typography from './../Typography/Typography';\n\nimport { ClassSet } from './../../utils';\n\nconst OptionsList = ({ options, handleClick }: OptionsListProps) => {\n  const getClickHandler = (option: OptionsListOption) => (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n    if (handleClick) handleClick(option);\n  };\n  return (\n    <div className=\"OptionsList\">\n      { options.map(option => (\n      <div \n        key={option.value}\n        className={ClassSet`\n          selected: ${option.selected}\n          highlighted: ${option.highlighted || false}\n          clickable: ${handleClick !== undefined}\n          OptionsList-item\n        `}\n        onClick={getClickHandler(option)}\n      >\n        <Typography dim={!option.selected && !option.highlighted}>{ option.value }</Typography>\n      </div>\n      ))}\n    </div>\n  );\n};\n\nexport default React.memo(OptionsList);\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { State } from './../state.types';\n\nexport enum SessionsActionTypes {\n  START_SESSION = 'START_SESSION',\n  END_SESSION = 'END_SESSION',\n  START_SET = 'START_SET',\n  END_SET = 'END_SET',\n  SET_SESSIONS = 'SET_SESSIONS',\n};\n\nexport interface StartSessionAction extends Action {\n  type: SessionsActionTypes.START_SESSION;\n  payload: {\n    muscleGroups: Array<string>;\n  };\n};\n\nexport interface EndSessionAction extends Action {\n  type: SessionsActionTypes.END_SESSION;\n};\n\nexport interface SetSessionAction extends Action {\n  type: SessionsActionTypes.SET_SESSIONS;\n  payload: {\n    sessions: Array<Session>;\n  };\n};\n\nexport type RefreshSessionsThunkAction = ThunkAction<Promise<void>, State, undefined, SetSessionAction>;\n\nexport type EndAndSaveSessionsThunkAction = ThunkAction<Promise<void>, State, undefined, EndSessionAction>;\n\nexport interface StartSetAction extends Action {\n  type: SessionsActionTypes.START_SET;\n  payload: {\n    exercise: string;\n  };\n};\n\nexport interface EndSetAction extends Action {\n  type: SessionsActionTypes.END_SET;\n  payload: {\n    reps: number;\n    weight: number;\n  };\n};\n\nexport type SessionsAction = StartSessionAction\n                           | EndSessionAction\n                           | StartSetAction\n                           | EndSetAction\n                           | SetSessionAction;\n\nexport interface SetPartial {\n  exercise: string,\n  timestamp: Date,\n  duration?: number,\n  reps?: number,\n  weight?: number,\n};\n\nexport interface SessionPartial {\n  timestamp: Date,\n  duration?: number,\n  muscleGroups: Array<string>,\n  sets: Array<Set>,\n};\n\nexport interface Set {\n  exercise: string,\n  timestamp: Date,\n  duration: number,\n  reps: number,\n  weight: number,\n};\n\nexport interface Session {\n  timestamp: Date;\n  duration: number;\n  muscleGroups: Array<string>;\n  sets: Array<Set>;\n};\n\nexport interface SessionsState {\n  currentSession?: SessionPartial;\n  currentSet?: SetPartial;\n  sessions: Array<Session>;\n};\n","import React, { Component } from 'react';\nimport './StopWatch.scss';\nimport { StopWatchProps, StopWatchState } from './StopWatch.types';\n\nimport Typography from './../Typography/Typography';\n\nclass StopWatch extends Component<StopWatchProps, StopWatchState> {\n  constructor(props: StopWatchProps) {\n    super(props);\n\n    this.state = {};\n  \n    this.update = this.update.bind(this);\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this.getMinutes = this.getMinutes.bind(this);\n    this.getSeconds = this.getSeconds.bind(this);\n  }\n\n  private refreshIntervalId: any;\n  private clearTimeoutIds: Array<any> = [];\n  \n\n  componentDidMount() {\n    if (this.props.startOnMount) this.start();\n  }\n\n  componentWillUnmount() {\n    if (this.refreshIntervalId) clearInterval(this.refreshIntervalId);\n    if (this.clearTimeoutIds.length) this.clearTimeoutIds.forEach(clearTimeout);\n  }\n\n  public update() {\n    this.setState(state => ({ elapsed: state.startTime ?\n        Date.now() - state.startTime\n      : state.elapsed\n    }));\n  }\n\n  public start() {\n    this.refreshIntervalId = setInterval(this.update, 500);\n    this.setState({\n      startTime: Date.now(),\n      elapsed: 0,\n    });\n  }\n\n  public stop() {\n    clearInterval(this.refreshIntervalId);\n    this.setState({ endTime: Date.now() });\n    if (this.props.clearOnStop) {\n      this.clearTimeoutIds.push(setTimeout(() => this.setState({ elapsed: 0 }), this.props.clearTimout || 3000));\n    }\n  }\n\n  private getMinutes() {\n    const hours = this.state.elapsed ?\n      (Math.round(this.state.elapsed / 60000))\n    : 0;\n    return hours.toString().padStart(2, '0');\n  }\n\n  private getSeconds() {\n    const hours = this.state.elapsed ?\n      (Math.round((this.state.elapsed % 60000) / 1000))\n    : 0;\n    return hours.toString().padStart(2, '0');\n  }\n  \n  render() {\n    return (\n      <div className=\"StopWatch\">\n        <Typography>{ this.getMinutes() }</Typography>\n        <Typography>:</Typography>\n        <Typography>{ this.getSeconds() }</Typography>\n      </div>\n    );\n  }\n};\n\nexport default StopWatch;\n","import React, { FunctionComponent } from 'react';\nimport './HorizontalControl.scss';\nimport { HorizontalControlProps, ControlProps } from './HorizontalControl.types';\n\nimport IconButton from './../IconButton/IconButton';\n\nconst Control = ({ icon, handleClick }: ControlProps) => {\n  return (\n    <IconButton icon={icon} handleClick={handleClick} margin={false} outline=\"dashed\" />\n  );\n};\n\nconst HorizontalControl: FunctionComponent<HorizontalControlProps> = ({ start, end, children }) => {\n  return (\n    <div className=\"HorizontalControl\">\n      <Control {...start} />\n      <div className=\"HorizontalControl-display\">\n        { children }\n      </div>\n      <Control {...end}   />\n    </div>\n  );\n};\n\nexport default React.memo(HorizontalControl);\n\n","import React, { FunctionComponent } from 'react';\nimport './TextList.scss';\nimport { TextListProps } from './TextList.types';\n\nimport Typography from './../Typography/Typography';\n\nconst TextList: FunctionComponent<TextListProps> = ({ children, limit = 100, renderPrefix }) => {\n  let texts = children;\n  if (children.length > limit) texts = children.slice(children.length - limit);\n  return (\n    <div className=\"TextList\">\n      { texts && texts.map((child, index) => (\n        <div key={index} className=\"TextList-item\">\n          { renderPrefix && \n          <div className=\"TextList-prefix\">\n            <Typography dim small>\n              { renderPrefix(children.length > limit ?\n                    (children.length - limit + index)\n                  : index) }\n            </Typography>\n          </div>\n          }\n          <div className=\"TextList-text\">\n            <Typography dim small>{ child }</Typography>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TextList;\n","import React, { FunctionComponent, ChangeEvent } from 'react';\nimport './TextInput.scss';\nimport { TextInputProps } from './TextInput.types';\n\nconst TextInput: FunctionComponent<TextInputProps> = ({ value, onChange, autoFocus }) => {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => onChange(e.target.value, e);\n  return (\n    <div className=\"TextInput\">\n      <input\n        className=\"TextInput-input\"\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        autoFocus={autoFocus}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(TextInput);\n","import { SessionsActionTypes, StartSessionAction, StartSetAction, EndSessionAction, EndSetAction, RefreshSessionsThunkAction, EndAndSaveSessionsThunkAction, SetSessionAction, Session } from './sessions.types';\n\nimport { defaultFetchHeaders } from './../../utils';\n\nexport const setSessions = (sessions: Array<Session>): SetSessionAction => ({\n  type: SessionsActionTypes.SET_SESSIONS,\n  payload: { sessions },\n});\n\nexport const refreshSessions = (): RefreshSessionsThunkAction =>\n  async (dispatch) => {\n    const resp = await fetch('/api/sessions');\n    if (!resp.ok) return console.log('Huh, I couldn\\'t get your session. Weird.');\n    const sessions = await resp.json();\n    dispatch(setSessions(sessions));\n  }\n;\n\nexport const startSession = (muscleGroups: Array<string>): StartSessionAction => ({\n  type: SessionsActionTypes.START_SESSION,\n  payload: { muscleGroups },\n});\n\nexport const endSession = (): EndSessionAction => ({\n  type: SessionsActionTypes.END_SESSION,\n});\n\nexport const endAndSaveSession = (): EndAndSaveSessionsThunkAction =>\n  async (dispatch, getState) => {\n    dispatch(endSession());\n    const { sessions } = getState().sessions;\n    if (sessions.length) {\n      const resp = await fetch('/api/sessions', {\n        method: 'POST',\n        headers: defaultFetchHeaders,\n        body: JSON.stringify({ session: sessions[sessions.length - 1] }),\n      });\n      if (!resp.ok) return console.log('Huh, I couldn\\'t save your session. Weird.');\n    }\n  }\n;\n\nexport const startSet = (exercise: string): StartSetAction => ({\n  type: SessionsActionTypes.START_SET,\n  payload: { exercise },\n});\n\nexport const endSet = (reps: number, weight: number): EndSetAction => ({\n  type: SessionsActionTypes.END_SET,\n  payload: { reps, weight },\n});\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { State } from './../state.types';\n\nexport enum ExercisesActionTypes {\n  ADD_EXERCISES = 'ADD_EXERCISES',\n  SET_EXERCISES = 'SET_EXERCISES',\n};\n\nexport interface AddExercisesAction extends Action {\n  type: ExercisesActionTypes.ADD_EXERCISES,\n  payload: {\n    exercises: Array<Exercise>,\n  },\n};\n\nexport interface SetExercisesAction extends Action {\n  type: ExercisesActionTypes.SET_EXERCISES,\n  payload: {\n    exercises: Array<Exercise>,\n  },\n};\n\nexport type RefreshExercisesThunkAction = ThunkAction<Promise<void>, State, undefined, SetExercisesAction>;\n\nexport type AddExerciseThunkAction = ThunkAction<Promise<void>, State, undefined, AddExercisesAction>;\n\nexport type ExercisesAction = AddExercisesAction | SetExercisesAction;\n\nexport interface ExercisePartial {\n  _id?: string,\n  name: string,\n  primaryMuscleGroups: Array<string>,\n  secondaryMuscleGroups: Array<string>,\n}\n\nexport interface Exercise {\n  _id: string,\n  name: string,\n  primaryMuscleGroups: Array<string>,\n  secondaryMuscleGroups: Array<string>,\n};\n\nexport type ExercisesState = Array<Exercise>;\n","import { Exercise, ExercisesActionTypes, AddExercisesAction, RefreshExercisesThunkAction, SetExercisesAction, AddExerciseThunkAction, ExercisePartial } from './exercises.types';\n\nimport { defaultFetchHeaders } from '../../utils';\n\nconst addExercises = (exercises: Array<Exercise>): AddExercisesAction => ({\n  type: ExercisesActionTypes.ADD_EXERCISES,\n  payload: { exercises },\n});\n\nconst setExercises = (exercises: Array<Exercise>): SetExercisesAction => ({\n  type: ExercisesActionTypes.SET_EXERCISES,\n  payload: { exercises },\n});\n\nexport const refreshExercises = (): RefreshExercisesThunkAction =>\n  async (dispatch) => {\n    const resp = await fetch('/api/exercises');\n    if (!resp.ok) return console.log('Huh, I couldn\\'t exercises from the backend. Weird.');\n    const exercises = await resp.json();\n    dispatch(setExercises(exercises));\n  }\n;\n\nexport const addExercise = (exercise: ExercisePartial): AddExerciseThunkAction =>\n  async (dispatch) => {\n    const resp = await fetch('/api/exercises', {\n      method: 'PUT',\n      headers: defaultFetchHeaders,\n      body: JSON.stringify(exercise),\n    });\n    if (!resp.ok) return console.log('Huh, I couldn\\'t save the exercise in the backend. Weird.');\n    const exercises = await resp.json();\n    dispatch(addExercises([ exercises ]));\n  }\n;\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\n\nimport { State } from '../state.types';\n\nexport interface Profile {\n  _id: string;\n  googleId: string;\n  dateAdded: Date;\n  displayName: string;\n  name: {\n    familyName: string;\n    givenName: string;\n  };\n  photos: Array<string>;\n  roles: Array<string>;\n  sessions: Array<string>;\n};\n\nexport enum ProfileActionTypes {\n  SET_PROFILE = 'SET_PROFILE',\n  REFRESH_PROFILE = 'REFRESH_PROFILE',\n};\n\nexport interface SetProfileAction extends Action {\n  type: ProfileActionTypes.SET_PROFILE;\n  payload: {\n    profile: Profile;\n  };\n};\n\nexport type RefreshProfileThunkAction = ThunkAction<Promise<void>, State, undefined, SetProfileAction>;\n\nexport type ProfileAction = SetProfileAction;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { push as navigateTo } from 'connected-react-router';\nimport './SessionRecorder.scss';\nimport { SessionRecorderProps, SessionRecorderState, SessionRecorderReduxStateProps, SessionRecorderReduxDispatchProps, SessionRecorderOptionsListOption } from './SessionRecorder.types';\n\nimport Logo from './../../components/Logo/Logo';\nimport Typography from './../../components/Typography/Typography';\nimport IconButton from './../../components/IconButton/IconButton';\nimport OptionsList from './../../components/OptionsList/OptionsList';\nimport StopWatch from './../../components/StopWatch/StopWatch';\nimport HorizontalControl from './../../components/HorizontalControl/HorizontalControl';\nimport TextList from './../../components/TextList/TextList';\nimport TextInput from './../../components/TextInput/TextInput';\n\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { ActionType } from './../../redux/action.type';\nimport { startSession, startSet, endSet, endAndSaveSession, refreshSessions } from './../../redux/sessions';\nimport { State } from './../../redux/state.types';\nimport { Exercise, refreshExercises, addExercise, ExercisePartial } from './../../redux/exercises';\n\nclass SessionRecorder extends Component<SessionRecorderProps, SessionRecorderState> {\n  constructor(props: SessionRecorderProps) {\n    super(props);\n  \n    this.state = {\n      reps: 8,\n      weight: 30,\n      sessionMuscleGroupOptions: [\n        { selected: false, value: 'Shoulders' },\n        { selected: false, value: 'Legs' },\n        { selected: false, value: 'Back' },\n        { selected: false, value: 'Chest' },\n        { selected: false, value: 'Biceps' },\n        { selected: false, value: 'Triceps' },\n        { selected: false, value: 'Abs' },\n      ],\n      newExerciseMuscleGroupOptions: [\n        { selected: false, highlighted: false, value: 'Shoulders' },\n        { selected: false, highlighted: false, value: 'Legs' },\n        { selected: false, highlighted: false, value: 'Back' },\n        { selected: false, highlighted: false, value: 'Chest' },\n        { selected: false, highlighted: false, value: 'Biceps' },\n        { selected: false, highlighted: false, value: 'Triceps' },\n        { selected: false, highlighted: false, value: 'Abs' },\n      ],\n      inSet: false,\n      weightUnit: 5,\n      repsUnit: 1,\n      setSummaries: [],\n      newExercise: '',\n    };\n\n    this.handleBackgroundClick = this.handleBackgroundClick.bind(this);\n    this.handleOptionsListItemClick = this.handleOptionsListItemClick.bind(this);\n    this.increaseReps = this.increaseReps.bind(this);\n    this.decreaseReps = this.decreaseReps.bind(this);\n    this.increaseWeight = this.increaseWeight.bind(this);\n    this.decreaseWeight = this.decreaseWeight.bind(this);\n    this.nextExercise = this.nextExercise.bind(this);\n    this.completeSession = this.completeSession.bind(this);\n    this.newExercise = this.newExercise.bind(this);\n    this.updateNewExercise = this.updateNewExercise.bind(this);\n    this.cancelNewExercise = this.cancelNewExercise.bind(this);\n    this.addNewExercise = this.addNewExercise.bind(this);\n  }\n\n  private setsStopWatchRef = React.createRef<StopWatch>();\n\n  componentDidMount() {\n    this.props.refreshExercises();\n    this.props.refreshSessions();\n  }\n  \n  handleBackgroundClick() {\n    switch(this.props.location.pathname) {\n      case '/':\n        return this.props.navigateTo('/musclegroups');\n      case '/musclegroups':\n        const muscleGroups = this.state.sessionMuscleGroupOptions.filter(mgo => mgo.selected).map(mgo => mgo.value);\n        if (!muscleGroups.length) return;\n        this.props.startSession(muscleGroups);\n        return this.props.navigateTo('/exercise');\n      case '/exercise':\n        return this.props.exerciseOptions[0] && \n          this.handleOptionsListItemClick(this.props.exerciseOptions[0]);\n      case '/sets':\n        if (this.setsStopWatchRef) {\n          const node = this.setsStopWatchRef.current;\n          if (node) {\n            if (!this.state.inSet) {\n              node.start();\n              if (this.state.exercise)\n                this.props.startSet(this.state.exercise._id);\n              this.setState({ inSet: true });\n            } else {\n              node.stop();\n              this.props.endSet(this.state.reps, this.state.weight);\n              this.setState(state => ({\n                inSet: false,\n                setSummaries: [ ...state.setSummaries,\n                  `${this.state.reps} reps at ${this.state.weight}lbs`\n                ],\n              }));\n            }\n          }\n        }\n    }\n  }\n\n  handleOptionsListItemClick(option: SessionRecorderOptionsListOption) { \n    switch(this.props.location.pathname) {\n      case '/musclegroups':\n        return this.setState(state => ({\n          sessionMuscleGroupOptions: state.sessionMuscleGroupOptions.map(mgo => ({\n            value: mgo.value,\n            selected: mgo.value === option.value ? !mgo.selected : mgo.selected,\n          })),\n        }));\n      case '/exercise':\n        option.extra && this.setState({ exercise: option.extra });\n        return this.props.navigateTo('/sets');\n      case '/exercise/add':\n        return this.setState(state => ({\n          newExerciseMuscleGroupOptions: state.newExerciseMuscleGroupOptions.map(mgo => ({\n            value: mgo.value,\n            selected: mgo.value === option.value ? !mgo.selected && !mgo.highlighted : mgo.selected,\n            highlighted: mgo.value === option.value ? mgo.selected && !mgo.highlighted : mgo.highlighted,\n          })),\n        }));\n    }\n  }\n\n  increaseReps() {\n    this.setState(state => ({ reps: state.reps + this.state.repsUnit }));\n  }\n  decreaseReps() {\n    this.setState(state => ({ reps: state.reps - this.state.repsUnit }));\n  }\n\n  increaseWeight() {\n    this.setState(state => ({ weight: state.weight + this.state.weightUnit }));\n  }\n  decreaseWeight() {\n    this.setState(state => ({ weight: state.weight - this.state.weightUnit }));\n  }\n\n  renderSetPrefix(index: number) {\n    return `Set ${index + 1}: `;\n  }\n\n  nextExercise() {\n    if (!this.state.inSet) {\n      this.setState({ setSummaries: [], inSet: false, exercise: undefined }, () =>\n        this.props.navigateTo('/exercise'));\n    }\n  }\n\n  completeSession() {\n    this.props.endSession();\n    this.props.navigateTo('/');\n  }\n\n  newExercise() {\n    this.props.navigateTo('/exercise/add');\n  }\n\n  updateNewExercise(newExercise: string) {\n    this.setState({ newExercise });\n  }\n\n  async addNewExercise() {\n    if (this.state.newExercise) {\n      await this.props.addExercise({\n        name: this.state.newExercise,\n        primaryMuscleGroups: this.state.newExerciseMuscleGroupOptions.filter(mgo => mgo.selected).map(mgo => mgo.value),\n        secondaryMuscleGroups: this.state.newExerciseMuscleGroupOptions.filter(mgo => mgo.highlighted).map(mgo => mgo.value),\n      });\n      this.props.navigateTo('/exercise');\n    }\n  }\n\n  cancelNewExercise() {\n    this.props.navigateTo('/exercise');\n  }\n\n  render() {\n    return (\n      <div className=\"SessionRecorder\" onClick={this.handleBackgroundClick}>\n        <div className=\"SessionRecorder-content\">\n          <Switch>\n            <Route path=\"/exercise/add\" render={() => (\n              <div>\n                <div className=\"SessionRecorder-heading\">\n                  <Typography dim={true}>New Exercise</Typography>\n                </div>\n                <TextInput value={this.state.newExercise} onChange={this.updateNewExercise} autoFocus />\n                <div className=\"SessionRecorder-heading\">\n                  <Typography dim={true}>Muscle Groups</Typography>\n                  <Typography dim={true} small>(double-click for secondary)</Typography>\n                </div>\n                <OptionsList options={this.state.newExerciseMuscleGroupOptions} handleClick={this.handleOptionsListItemClick}/>\n                <div className=\"SessionRecorder-button-list\">\n                  { this.state.newExercise &&\n                  <IconButton icon=\"done\" outline=\"dashed\" handleClick={this.addNewExercise} />\n                  }\n                  <IconButton icon=\"cancel\" outline=\"dashed\" handleClick={this.cancelNewExercise} />\n                </div>\n              </div>\n            )} />            \n            <Route path=\"/sets\" render={() => (\n              <div>\n                <div className=\"SessionRecorder-heading\">\n                  <Typography dim={true}>\n                    { this.state.exercise ? this.state.exercise.name : 'Go pick an exercise!' }\n                  </Typography>\n                </div>\n                { !this.state.inSet ?\n                  <IconButton icon=\"start\" />\n                : <IconButton icon=\"done\" /> }\n                <div className=\"SessionRecorder-sets-stopwatch\">\n                  <StopWatch ref={this.setsStopWatchRef} clearOnStop />\n                </div>\n                <div className=\"SessionRecorder-number-input\">\n                  <Typography dim small>reps</Typography>\n                  <div className=\"SessionRecorder-number-input-control\">\n                    <HorizontalControl\n                      start={{ icon: 'minus', handleClick: this.decreaseReps }}\n                      end={{ icon: 'add', handleClick: this.increaseReps }}\n                    >\n                      { this.state.reps }\n                    </HorizontalControl>\n                  </div>\n                </div>\n                <div className=\"SessionRecorder-number-input\">\n                  <Typography dim small>weight</Typography>\n                  <div className=\"SessionRecorder-number-input-control\">\n                    <HorizontalControl\n                      start={{ icon: 'minus', handleClick: this.decreaseWeight }}\n                      end={{ icon: 'add', handleClick: this.increaseWeight }}\n                    >\n                      { this.state.weight }\n                    </HorizontalControl>\n                  </div>\n                </div>\n                <div className=\"SessionRecorder-sets-list\">\n                  <TextList renderPrefix={this.renderSetPrefix} limit={5}>\n                    { this.state.setSummaries }\n                  </TextList>\n                </div>\n                { !this.state.inSet &&\n                <IconButton icon=\"done\" outline=\"dashed\" handleClick={this.nextExercise} />\n                }\n              </div>\n            )} />\n            <Route path=\"/exercise\" render={() => (\n              <div>\n                <div className=\"SessionRecorder-heading\">\n                  <Typography dim={true}>Exercise</Typography>\n                </div>\n                <OptionsList options={this.props.exerciseOptions} handleClick={this.handleOptionsListItemClick}/>\n                <div className=\"SessionRecorder-button-list\">\n                  <IconButton icon=\"done\" outline=\"dashed\" handleClick={this.completeSession} />\n                  <IconButton icon=\"add\" outline=\"dashed\" handleClick={this.newExercise} />\n                  <IconButton icon=\"next\" />\n                </div>\n              </div>\n            )} />\n            <Route path=\"/musclegroups\" render={() => (\n              <div>\n                <div className=\"SessionRecorder-heading\">\n                  <Typography dim={true}>Muscle Groups</Typography>\n                </div>\n                <OptionsList options={this.state.sessionMuscleGroupOptions} handleClick={this.handleOptionsListItemClick}/>\n                <IconButton icon=\"next\" />\n              </div>\n            )} />\n            <Route path=\"/\" render={() => (\n              <div>\n                <div className=\"SessionRecorder-logo\">\n                  <Logo />\n                </div>\n                <Typography dim={true}>Start Gym Session</Typography>\n                <IconButton icon=\"add\" />\n              </div>\n            )} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst includesMuscleGroup = (exercise: Exercise, muscleGroups: Array<string> = []) => {\n  let returnVal = false;\n  muscleGroups.forEach(mg => {\n    if (exercise.primaryMuscleGroups.includes(mg)) return returnVal = true;\n  });\n  return returnVal;\n};\n\nconst mapStateToProps = (state: State): SessionRecorderReduxStateProps => ({\n  location: state.router.location,\n  exerciseOptions: state.exercises\n    .filter(exercise => state.sessions.currentSession &&\n                        includesMuscleGroup(exercise, state.sessions.currentSession.muscleGroups))\n    .map(exercise => ({\n      selected: false,\n      value: exercise.name,\n      extra: exercise,\n    })),\n});\n\nconst mapDispathToProps = (dispatch: ThunkDispatch<State, undefined, ActionType>): SessionRecorderReduxDispatchProps => ({\n  navigateTo: (route: string) => dispatch(navigateTo(route)),\n  startSession: (muscleGroups: Array<string>) => dispatch(startSession(muscleGroups)),\n  endSession: () => dispatch(endAndSaveSession()),\n  startSet: (exercise: string) => dispatch(startSet(exercise)),\n  endSet: (reps: number, weight: number) => dispatch(endSet(reps, weight)),\n  refreshExercises: () => dispatch(refreshExercises()),\n  refreshSessions: () => dispatch(refreshSessions()),\n  addExercise: (exercise: ExercisePartial) => dispatch(addExercise(exercise))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps,\n)(SessionRecorder);\n","import React, { FunctionComponent, MouseEvent } from 'react';\nimport './Platform.scss';\nimport { PlatformProps } from './Platform.type';\n\nconst Platform: FunctionComponent<PlatformProps> = ({ children }) => {\n  const stopPropagation = (e: MouseEvent<HTMLDivElement>) => e.stopPropagation();\n  return (\n    <div onClick={stopPropagation}>\n      { children }\n    </div>\n  );\n};\n\nexport default React.memo(Platform);\n","import React, { FunctionComponent } from 'react';\nimport './ContentCard.scss';\nimport { ContentCardProps } from './ContentCard.types';\n\nimport Platform from './../Platform/Platform';\n\nconst ContentCard: FunctionComponent<ContentCardProps> = ({ children }) => {\n  return (\n    <Platform>\n      <div className=\"ContentCard\">\n        <div className=\"ContentCard-display\">\n          { children[0] }\n        </div>\n        <div className=\"ContentCard-caption\">\n          { children[1] }\n        </div>\n      </div>\n    </Platform>\n  );\n};\n\nexport default React.memo(ContentCard);","import React, { FunctionComponent } from 'react';\nimport Plot from 'react-plotly.js';\nimport './SessionsPerWeekCard.scss';\nimport { SessionsPerWeekProps } from './SessionsPerWeekCard.types';\n\nimport ContentCard from './../ContentCard';\nimport { Data } from 'plotly.js';\nimport { AppColors } from '../../../utils';\n\nconst getRanges = (weeks = 5, weekEndingDay = 5, paddingWeeks = 1) => {\n  const ranges: Array<{ start: Date, end: Date, label: string }> = [];\n  let friday = new Date();\n  friday.setDate(friday.getDate() + (weekEndingDay - 1 - friday.getDay() + 7) % 7 + 1 - ((weeks - paddingWeeks) * 7));\n  for (let i = 0; i < weeks; ++i) {\n    const start = new Date(friday);\n    friday.setDate(friday.getDate() + 6);\n    const nextThursday = new Date(friday);\n    friday.setDate(friday.getDate() + 1);\n    const end = new Date(friday);\n    ranges.push({\n      start,\n      end,\n      label: `${start.toDateString().slice(4, 7)} ${start.getDate()}-${nextThursday.getDate()}`,\n    });\n  }\n  return ranges;\n}\n\nconst SessionsPerWeekCard: FunctionComponent<SessionsPerWeekProps> = ({ sessions }) => {\n  const ranges = getRanges();\n  const data: Data & { width: number } = {\n    type: 'bar',\n    x: ranges.map(r => r.label),\n    y: ranges.map(r => sessions.filter(s => s.timestamp > r.start && s.timestamp <= r.end).length),\n    marker: { opacity: 0.5, color: [ 'blue', 'blue', 'blue', 'red', 'red' ] },\n    width: 0.5,\n  };\n  return (\n    <div className=\"SessionsPerWeekCard\">\n      <ContentCard>\n        <Plot\n          className=\"SessionsPerWeekCard-plot\"\n          data={[ data ]}\n          layout={{\n            margin: { t: 24, r: 36, b: 44, l: 36, pad: 10 },\n            autosize: true,\n            xaxis: {\n              tickangle: -15,\n              tickfont: { size: 8 },\n            },\n            yaxis: {\n              tickcolor: AppColors.textColorDim,\n              tickfont: { size: 10 },\n            },\n          }}\n          config={{ displayModeBar: false }}\n        />\n        <div>Sessions per week</div>\n      </ContentCard>\n    </div>\n  );\n};\n\nexport default React.memo(SessionsPerWeekCard);\n","import React, { Component } from 'react';\nimport { push as navigateTo } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport './SessionTracker.scss';\nimport { SessionTrackerProps, SessionTrackerState, SessionTrackerReduxStateProps, SessionTrackerReduxDispatchProps } from './SessionTracker.types';\n\nimport { State } from './../../redux/state.types';\nimport { ActionType } from './../../redux/action.type';\nimport ContentCard from '../../components/ContentCard/ContentCard';\nimport SessionsPerWeekCard from '../../components/ContentCard/SessionsPerWeekCard/SessionsPerWeekCard';\n\nclass SessionTracker extends Component<SessionTrackerProps, SessionTrackerState> {\n  private getPanelIndex() {\n    try {\n      const query: { [name: string]: string } = this.props.location.search.slice(1).split('&').reduce((acc, cur) => {\n        const [ name, value ] = cur.split('=');\n        return ({ ...acc, [name]: value });\n      }, {});\n      return query['panel'];\n    } catch (err) {\n      console.warn('You\\'ve got an invalid query string there bro.');\n      return '';\n    }\n  }\n\n  private getSpotlight() {\n    const panelIndex = this.getPanelIndex();\n    switch(panelIndex) {\n      case '1':\n      default:\n        return <SessionsPerWeekCard sessions={this.props.sessions} />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SessionTracker\">\n        <div className=\"SessionTracker-spotlight\">\n          { this.getSpotlight() }\n        </div>\n      </div>\n    );\n  }\n};\n\n\nconst mapStateToProps = (state: State): SessionTrackerReduxStateProps => ({\n  location: state.router.location,\n  sessions: state.sessions.sessions, \n});\n\nconst mapDispathToProps = (dispatch: ThunkDispatch<State, undefined, ActionType>): SessionTrackerReduxDispatchProps => ({\n  navigateTo: (route: string) => dispatch(navigateTo(route)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps,\n)(SessionTracker);\n","import React from 'react';\nimport './Toolbar.scss';\nimport { ToolbarProps } from './Toolbar.types';\n\nimport Logo from './../Logo/Logo';\n\nconst Toolbar = ({ navigateTo }: ToolbarProps) => {\n  return (\n    <div className=\"Toolbar\">\n      <Logo size=\"small\" handleClick={() => { navigateTo('/'); } } />\n    </div>\n  );\n};\n\nexport default React.memo(Toolbar);\n","import { ProfileActionTypes, Profile, SetProfileAction, RefreshProfileThunkAction } from './profile.types';\n\nexport const setProfile = (profile: Profile): SetProfileAction => ({\n  type: ProfileActionTypes.SET_PROFILE,\n  payload: { profile },\n});\n\nexport const refreshProfile = (): RefreshProfileThunkAction =>\n  async (dispatch) => {\n    const resp = await fetch('/api/users');\n    if (!resp.ok) return console.log('You aren\\'t logged in. That\\'s okay tho.');\n    const profile = await resp.json();\n    dispatch(setProfile(profile));\n  }\n;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { push as navigateTo } from 'connected-react-router';\nimport './App.scss';\nimport { AppProps, AppState, AppReduxDispatchProps, AppReduxStateProps } from './App.types';\n\nimport SessionRecorder from './../SessionRecorder/SessionRecorder';\nimport SessionTracker from './../SessionTracker/SessionTracker';\nimport Typography from '../../components/Typography/Typography';\nimport Toolbar from './../../components/Toolbar/Toolbar';\nimport Platform from './../../components/Platform/Platform';\n\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { ActionType } from './../../redux/action.type';\nimport { State } from './../../redux/state.types';\nimport { refreshProfile } from './../../redux/profile';\n\nclass App extends Component<AppProps, AppState> {\n  componentDidMount() {\n    this.props.refreshProfile();\n  }\n\n  render() {\n    return (\n      <div className=\"theme-dark\">\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact />\n            <Route path=\"/\" render={() => <Toolbar navigateTo={this.props.navigateTo} />} />\n          </Switch>\n          <SessionRecorder />\n          { !this.props.isLoggedIn &&\n          <Platform>\n            <a href=\"/api/auth/google\">\n              <div className=\"App-login\">\n                <Typography dim>Login</Typography>\n              </div>\n            </a>\n          </Platform>\n          }\n          <SessionTracker />\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state: State): AppReduxStateProps => ({\n  isLoggedIn: state.profile !== null,\n});\n\nconst mapDispathToProps = (dispatch: ThunkDispatch<State, undefined, ActionType>): AppReduxDispatchProps => ({\n  navigateTo: (route: string) => dispatch(navigateTo(route)),\n  refreshProfile: () => dispatch(refreshProfile()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps,\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { History } from 'history';\nimport { connectRouter } from 'connected-react-router';\n\nimport { sessionsReducer } from './sessions/sessions.reducer';\nimport { exercisesReducer } from './exercises/exercises.reducer';\nimport { profileReducer } from './profile/profile.reducer';\n\nconst createRootReducer = (history: History<any>) => combineReducers({\n  router: connectRouter(history),\n  sessions: sessionsReducer,\n  exercises: exercisesReducer,\n  profile: profileReducer,\n});\n\nexport { createRootReducer };\n","import { SessionsAction, SessionsActionTypes, SessionsState } from './sessions.types';\n\nexport const sessionsReducer = (state: SessionsState = { sessions: [] }, action: SessionsAction): SessionsState => {\n  switch(action.type) {\n    case SessionsActionTypes.SET_SESSIONS:\n      return ({\n        ...state,\n        sessions: action.payload.sessions.map(session => ({\n          ...session,\n          timestamp: new Date(session.timestamp),\n        })),\n      });\n    case SessionsActionTypes.START_SESSION:\n      return ({\n        ...state,\n        currentSession: { timestamp: new Date(), muscleGroups: action.payload.muscleGroups, sets: [] },\n      });\n    case SessionsActionTypes.END_SESSION:\n      if (!state.currentSession) {\n        console.warn('Tried to end session with no current session. This is a no-op.');\n        return state;\n      }\n      return ({\n        ...state,\n        currentSession: undefined,\n        sessions: [\n          ...state.sessions,\n          {\n            ...state.currentSession,\n            duration: Date.now() - state.currentSession.timestamp.valueOf(),\n          }\n        ],\n      });\n    case SessionsActionTypes.START_SET:\n      return ({\n        ...state,\n        currentSet: { timestamp: new Date(), exercise: action.payload.exercise },\n      });\n    case SessionsActionTypes.END_SET:\n      if (!state.currentSession) {\n        console.warn('Tried to end set with no current session. This is a no-op.');\n        return state;\n      }\n      if (!state.currentSet) {\n        console.warn('Tried to end set with no current set. This is a no-op.');\n        return state;\n      }\n      return ({\n        ...state,\n        currentSet: undefined,\n        currentSession: {\n          ...state.currentSession,\n          sets: [\n            ...state.currentSession.sets,\n            {\n              ...state.currentSet,\n              duration: Date.now() - state.currentSession.timestamp.valueOf(),\n              reps: action.payload.reps,\n              weight: action.payload.weight,\n            },\n          ],\n        },\n      });\n    default:\n      return state;\n  };\n};\n","import { ExercisesState, ExercisesAction, ExercisesActionTypes } from './exercises.types';\n\nexport const exercisesReducer = (state: ExercisesState = [], action: ExercisesAction): ExercisesState => {\n  switch(action.type) {\n    case ExercisesActionTypes.ADD_EXERCISES:\n      return [ ...state, ...action.payload.exercises ];\n    case ExercisesActionTypes.SET_EXERCISES:\n      return action.payload.exercises;\n    default:\n      return state;\n  }\n};\n","import { ProfileAction, ProfileActionTypes, Profile } from './profile.types';\n\nexport const profileReducer = (state: Profile | null = null, action: ProfileAction): Profile | null => {\n  switch(action.type) {\n    case ProfileActionTypes.SET_PROFILE:\n      return ({\n        ...action.payload.profile,\n      });\n    default:\n      return state;\n  };\n};\n","import { createBrowserHistory } from 'history';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\n\nimport { createRootReducer } from './rootReducer';\n\nexport const history = createBrowserHistory();\n\nconst store = createStore(\n  createRootReducer(history),\n  compose(\n    applyMiddleware(\n      routerMiddleware(history), // for dispatching router history actions\n      thunk, // cool name\n    ),\n  ),\n);\n\nexport { store };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './consumers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { store, history } from './redux/store';\nimport { ConnectedRouter } from 'connected-react-router';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}